name: Development

on:
  workflow_call:
    inputs:
      php:
        required: true
        type: string
      mysql:
        required: true
        type: string
      module_codecept_test_group:
        type: string
        default: 'eyeable_assist'

  workflow_dispatch:
    inputs:
      php:
        description: 'PHP version'
        required: true
        default: '8.0'
        type: choice
        options:
          - '7.4'
          - '8.0'
      mysql:
        description: 'MySQL version'
        required: true
        default: '5.7.37'

env:
  PACKAGE_NAME: 'eyeable/eye-able-oxid'
  MODULE_PATHS: 'eyeable/eyeableassist'

jobs:
  install_shop_with_module:
    runs-on: ubuntu-latest
    steps:
      - name: Clone testing environment
        run: git clone https://github.com/OXID-eSales/docker-eshop-sdk.git .

      - name: Clone the shop
        run: git clone --depth 1 https://github.com/OXID-eSales/oxideshop_ce.git --branch b-6.5.x --single-branch source

      - name: Cache current installation
        uses: actions/cache@v3
        with:
          path: |
            ./*
          key: installation-${{ github.sha }}-${{ join(inputs.*, '-') }}-${{ github.run_number }}-${{ github.run_attempt }}

      - name: Prepare container configuration
        run: |
          make setup
          make addbasicservices

          perl -pi\
            -e 's#PHP_VERSION=.*#PHP_VERSION=${{ inputs.php }}#g;'\
            -e "s#MYSQL_VERSION=.*#MYSQL_VERSION=${{ inputs.mysql }}#g;"\
            .env

          perl -pi\
            -e 's#display_errors =.*#display_errors = false#g;'\
            -e 's#error_reporting = .*#error_reporting = E_ALL & ~E_DEPRECATED & ~E_NOTICE & ~E_WARNING#g;'\
            -e 'print "xdebug.max_nesting_level=1000\nxdebug.mode=coverage\n\n"'\
            containers/php/custom.ini

          perl -pi\
            -e 's#/var/www/#/var/www/source/#g;'\
            containers/httpd/project.conf

      - name: Prepare shop configuration
        run: |
          cp source/source/config.inc.php.dist source/source/config.inc.php
          perl -pi\
            -e 's#<dbHost>#mysql#g;'\
            -e 's#<dbUser>#root#g;'\
            -e 's#<dbName>#example#g;'\
            -e 's#<dbPwd>#root#g;'\
            -e 's#<dbPort>#3306#g;'\
            -e 's#<sShopURL>#http://localhost.local/#g;'\
            -e 's#<sShopDir>#/var/www/source/#g;'\
            -e 's#<sCompileDir>#/var/www/source/tmp/#g;' \
            source/source/config.inc.php

      - name: Checkout current module
        uses: actions/checkout@v4
        with:
          path: source/test-module

      - name: Start containers
        run: |
          make up
          sleep 2

      - name: Install module
        run: |
          docker-compose exec -T \
            php composer config repositories.${{ env.PACKAGE_NAME }} \
            --json '{"type":"path", "url":"./test-module", "options": {"symlink": true}}'
          docker-compose exec -T \
            php composer require ${{ env.PACKAGE_NAME }}:* --no-interaction --no-update

      - name: Install dependencies
        run: docker-compose exec -T php composer update --no-interaction

      - name: Reset shop
        run: docker-compose exec -T php php vendor/bin/reset-shop

      - name: Stop containers
        run: |
          make down
          sleep 2

      - name: Show docker log
        if: always()
        run: |
          docker-compose logs

      - name: Upload configuration artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Configs-${{ inputs.php }}-${{ inputs.mysql }}
          path: |
            docker-compose.yml
            source/composer.json
            source/composer.lock
            source/source/config.inc.php

  codeception_tests_module:
    needs: [ install_shop_with_module ]
    runs-on: ubuntu-latest
    steps:
      - name: Load current installation from cache
        uses: actions/cache@v3
        with:
          fail-on-cache-miss: true
          path: |
            ./*
          key: installation-${{ github.sha }}-${{ join(inputs.*, '-') }}-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            installation-${{ github.sha }}-${{ join(inputs.*, '-') }}-${{ github.run_number }}-${{ github.run_attempt }}
            installation-${{ github.sha }}-${{ join(inputs.*, '-') }}-${{ github.run_number }}

      - name: Start containers
        run: |
          make file=services/selenium-chrome.yml addservice
          make up
          sleep 2

      - name: Run module and shop codeception tests
        # NOTE: exclude group is from shop admin tests and ok to exclude
        run: |
          docker-compose exec -T \
            -e PARTIAL_MODULE_PATHS=${{ env.MODULE_PATHS }} \
            -e SELENIUM_SERVER_HOST=selenium \
            -e BROWSER_NAME=chrome \
            -e RUN_TESTS_FOR_SHOP=0 \
            -e RUN_TESTS_FOR_MODULES=1 \
            -e ACTIVATE_ALL_MODULES=1 \
            -e TEST_SUITE=acceptance \
            php vendor/bin/runtests-codeception

      - name: Upload log artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ModulesCodeceptionTestsLog-${{ inputs.php }}-${{ inputs.mysql }}
          path: |
            docker-compose.yml
            source/composer.json
            source/composer.lock
            source/source/config.inc.php
            source/source/log/oxideshop.log
            data/php/logs/error_log.txt
            source/modules/{{env.MODULE_PATHS}}/tests/Codeception/_output

      - name: Stop containers
        if: always()
        run: |
          make down
          sleep 2

  codeception_tests_shop:
    needs: [ install_shop_with_module ]
    runs-on: ubuntu-latest
    steps:
      - name: Load current installation from cache
        uses: actions/cache@v3
        with:
          fail-on-cache-miss: true
          path: |
            ./*
          key: installation-${{ github.sha }}-${{ join(inputs.*, '-') }}-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            installation-${{ github.sha }}-${{ join(inputs.*, '-') }}-${{ github.run_number }}-${{ github.run_attempt }}
            installation-${{ github.sha }}-${{ join(inputs.*, '-') }}-${{ github.run_number }}

      - name: Start containers
        run: |
          make file=services/selenium-chrome.yml addservice
          make up
          sleep 2

      - name: Run module and shop codeception tests
        # NOTE: exclude group is from shop admin tests and ok to exclude
        run: |
          docker-compose exec -T \
            -e PARTIAL_MODULE_PATHS=${{ env.MODULE_PATHS }} \
            -e SELENIUM_SERVER_HOST=selenium \
            -e BROWSER_NAME=chrome \
            -e RUN_TESTS_FOR_SHOP=1 \
            -e RUN_TESTS_FOR_MODULES=0 \
            -e ACTIVATE_ALL_MODULES=1 \
            -e TEST_SUITE=acceptance \
            php vendor/bin/runtests-codeception -x genericImport 

      - name: Upload log artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: CodeceptionTestsLog-${{ inputs.php }}-${{ inputs.mysql }}
          path: |
            docker-compose.yml
            source/composer.json
            source/composer.lock
            source/source/config.inc.php
            source/source/log/oxideshop.log
            data/php/logs/error_log.txt
            source/tests/Codeception/_output

      - name: Stop containers
        if: always()
        run: |
          make down
          sleep 2
